# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages:          # List of stages for jobs, and their order of execution
  - QA ENV

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

QA ENV:       # This job runs in the build stage, which runs first.
  stage: QA ENV
  image: cypress/browsers:node16.5.0-chrome94-ff93
  script:
    npx cypress verify
    # # - yarn install --frozen-lockfile --ignore-engines
    # - npm i cypress-xpath
    # - npx cypress cache path
    # - npx cypress cache list
    # # - npm install -g lambdatest-cypress-cli
    # - npm install
    # # - lambdatest-cypress run # 36dd1202-c88d-4f76-87ac-f67343a2a113 itâ€™s the cypress dashboard key
    # - npx cypress run --config video=false --env allure=true --browser chrome
    # - allure generate allure-results
    # - allure open allure-report
  #only: [merge_request]
  artifacts:
    when: always
    paths:
      # save cypress artifacts
      - cypress/screenshots/**/**/*.png
      - logs
      - public
    expire_in: 2 days